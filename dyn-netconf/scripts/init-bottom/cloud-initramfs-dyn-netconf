#!/bin/sh
set -e

PREREQS=""
case $1 in
    prereqs) echo "${PREREQS}"; exit 0;;
esac

. /scripts/functions

PATH=/usr/sbin:/usr/bin:/sbin:/bin

# doc in klibc-utils /usr/share/doc/libklibc/README.ipconfig.gz
# example below:
#DEVICE='eth0'
#PROTO='dhcp'                      ## or 'none' or 'off' or 'static'
#IPV4ADDR='192.168.122.89'
#IPV4BROADCAST='192.168.122.255'
#IPV4NETMASK='255.255.255.0'
#IPV4GATEWAY='192.168.122.1'
#IPV4DNS0='192.168.122.1'         ## only come from dhcp
#IPV4DNS1='0.0.0.0'
#HOSTNAME=''
#DNSDOMAIN=''
#NISDOMAIN=''
#ROOTSERVER='192.168.122.1'
#ROOTPATH=''
#filename=''
#UPTIME='21'
#DHCPLEASETIME='3600'
#DOMAINSEARCH=''

error() { echo "${0##*/}:" "$@" 1>&2; }
tmpf="/tmp/${0##*/}.ni"

{
echo "## This file is generated by cloud-initramfs-dyn-netconf"
echo "auto lo"
echo "iface lo inet loopback"
} > "$tmpf"

for f in /run/net-*.conf; do
	[ -f "$f" ] || continue
	DEVICE=""; PROTO=""; IPV4ADDR=""; IPV4NETMASK=""; IPV4GATEWAY="";
    IPV4DNS0=""; IPV4DNS1=""; DNSDOMAIN=""; DOMAINSEARCH="";
	. "$f"
	if [ -z "$DEVICE" ]; then
		error "WARNING: $f had no 'DEVICE' set"
		continue
	fi
	if [ -z "$PROTO" ]; then
		error "WARNING: $f had no 'PROTO' set"
		continue
	fi
	echo "auto $DEVICE"
	if [ "$PROTO" = "dhcp" ]; then
		echo "iface $DEVICE inet dhcp"
	elif [ "$PROTO" = "static" ]; then
		echo "iface $DEVICE inet static"
		[ -n "$IPV4ADDR" ] && printf "\t%s" "address $IPV4ADDR"
		[ -n "$IPV4NETMASK" ] && printf "\t%s" "netmask $IPV4NETMASK"
		[ -n "$IPV4GATEWAY" ] && printf "\t%s" "netmask $IPV4GATEWAY"
	fi
	[ -n "$IPV4DNS0" ] &&
		printf "\t%s" "dns-nameservers ${IPV4DNS0}${IPV4DNS1:+ ${IPV4DNS1}}"
	[ -n "$DNSDOMAIN" -o -n "$DOMAINSEARCH" ] &&
		printf "\t%s" "dns-search ${DNSDOMAIN} ${DOMAINSEARCH}"
done >> "$tmpf"

[ -d /run/network ] || mkdir /run/network
mv "$tmpf" /run/network/dynamic-interfaces

# vi: ts=4 noexpandtab
