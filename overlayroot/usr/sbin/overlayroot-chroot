#!/bin/sh
#
#    overlayroot-chroot - chroot wrapper script for overlayroot
#    Copyright (C) 2012 Dustin Kirkland <kirkland@ubuntu.com>
#
#    Authors: Dustin Kirkland <kirkland@ubuntu.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

set -e

error() {
	printf "ERROR: $@\n" 1>&2
	exit 1
}

info() {
	printf "INFO: $@\n" 1>&2
}

get_lowerdir() {
	overlay=$(grep "^overlayfs-root / overlayfs " /proc/mounts)
	if [ $? -eq 0 ]; then
		lowerdir=${overlay##*lowerdir=}
		lowerdir=${lowerdir%%,*}
		if mountpoint "${lowerdir}" >/dev/null; then
			_RET="${lowerdir}"
		else
			error "Unable to find the overlayroot lowerdir"
		fi
	else
		error "Unable to find an overlayroot filesystem"
	fi
}

clean_exit() {
	mounts="$1"
	rc=0
	for d in ${mounts}; do
		if mountpoint ${d} >/dev/null; then
			umount ${d} || rc=1
		fi
	done
	get_lowerdir
	lowerdir=${_RET}
	if ! mount -o remount,ro "${lowerdir}" 2>/dev/null; then
		info "Note that [${lowerdir}] is still mounted read/write"
	fi
	exit ${rc}
}

# Try to find the overlayroot filesystem
get_lowerdir
lowerdir=${_RET}
mounts=
for d in proc run sys; do
	if ! mountpoint "${lowerdir}/${d}" >/dev/null; then
		mount -o bind "/${d}" "${lowerdir}/${d}" || error "Unable to bind /${d}"
		mounts="$mounts $lowerdir/$d"
		trap "clean_exit \"${mounts}\" || true" EXIT HUP INT QUIT TERM   
	fi
done

# Remount with read/write
mount -o remount,rw "${lowerdir}" ||
   error "Unable to remount [${lowerdir}] writable"
info "Chrooting into [${lowerdir}]"
chroot ${lowerdir} "$@"

# Clean up mounts on exit
clean_exit "${mounts}"

# vi: ts=4 noexpandtab
